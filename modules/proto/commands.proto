syntax = "proto2";

package bismuth;


message TX {
    // Signature - 64 bytes
    required bytes txid=1;
    //
    required uint32 block_height=2;
    // Timestamp
    required uint32 timestamp=3;
    // the tester
    required string sender=4;
    // testee
    required string recipient=5;
    // Tx or test type
    required uint32 what=6;
    // numeric value
    required uint32 value=7;
    // params of the test and/or result
    optional string params=8;
    // pubkey - 64 bytes
    required bytes pubkey=9;
}

message Block {
    required uint32 height=1;
    required uint32 round=2;
    required uint32 sir=3;
    // Timestamp
    required uint32 ts=4;
    required string previous_hash=5;
    repeated TX txs = 6;
    required uint32 msg_count=7;
    required uint32 sources=8;
    // Who - forger
    required string from=9;
    // Should be byte too
    required string signature=10;
    // Blockhash
    required string hash=11;
}

message IP {
    // Would "bytes" be better suited?
    required uint32 ipv4=1;
    optional uint64 ipv6a=2;
    optional uint64 ipv6b=3;
    optional uint32 port=4 [default = 5658 ];
}

enum ko_reason {
    no_reason = 0;
    version_mismatch = 1;
    bad_ip = 2;
    bad_pubkey = 3;
    bad_block = 4;
    bad_slot = 5;
    no_resources = 6;
}


message Command {
    enum Type {
        hello = 0;
        ok = 1;
        ko = 2;
        ping = 3;
        peers = 4;
        status = 5;
        block = 6;
        tx = 7;
        mempool = 8;
        //message = 10;
    }
    required Type command = 1;

    oneof param {
        string string_value=2;
        int32 int32_value=3;
        ko_reason reason_value=4;
    }

    repeated TX tx_values = 5;
    repeated IP ip_values = 6;
    repeated string sig_values = 7;
    optional Block block_value = 8;
}
